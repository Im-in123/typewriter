


{% extends 'typr_main/dashboard/dashbase.html' %}
{%block title%} typewriter. {% endblock %}
{% load static %}

{% block navi %}
<ul>
	<li ><a href="{%url 'typr_main:dashboard'%}">Home</a></li>
	<li class="colorlib-active"><a href="{%url 'typr_main:order'%}">Order</a></li>
	<li><a href="{%url 'typr_main:pending'%}">Pending Orders
			{% if pending_count != 0 %}
			<span style="color: coral;">({{pending_count}})</span>
			  {% else %}
			  
		  {% endif %}
	</a></li>
	<li><a href="{%url 'typr_main:in_progress'%}">In progress
			{% if in_progress_count != 0 %}
			<span style="color: coral;">({{in_progress_count}})</span>
		   {% else %}
		   
	   {% endif %}
	</a></li>
	<li><a href="{%url 'typr_main:completed'%}">Completed Orders
			{% if completed_count != 0 %}
			<span style="color: coral;">({{completed_count}})</span>
			{% else %}
			
		{% endif %}
	</a></li>
	<li><a href="{%url 'typr_main:payment'%}">Payment</a></li>
	<li><a href="{%url 'typr_main:profile'%}">Profile</a></li>
	<li><a href="{%url 'typr_main:u_settings'%}">Settings</a></li>
	<li><a href="{%url 'typr_users:logout'%}">Logout</a></li>
	</ul><br>
	{% endblock %}

	{% block hi %}

	   <div class="hero-wrap js-fullheight" style="background-image: url({% static 'images/video-image.jpg'%});" data-stellar-background-ratio="0.5">
		  
		   <div class="js-fullheight d-flex justify-content-center align-items-center">
			   <div class="col-md-8 text text-center">
				
				   <div class="desc" >
					   <center>
						   <p style="color:gray;  background:white; border-radius:20px; font-size:20px;"  >
						   Upload pictures/screenshots/scan
						   </p>
					   </center>
					   <div id="righthere"></div>

		
					  <br>
					   <form class="form-inline"  id="myformid" method="POST" action="" enctype="multipart/form-data" style="font-size:14px;">
						{% csrf_token %}
						<label for="oni"  style="font-size:14px">Images:</label >
						<input type="file" id="oni" name="images" accept="image/*" multiple required>
						
				 			<br>
							
						<div class="form-group mx-sm-3 mb-2">
						<br>
						  <span class="input-group-text" id="addon-wrapping" style="font-size:14px">Folder Name :</span> <input type="text" class="form-control"  style="height:11px;" id="d2" name="collection" placeholder="type any name..."  required>
						</div>
						<button type="submit" id="onthis" class="btn btn-primary mb-2" style="font-size:14px">Upload</button>
					  </form>
				
					   <div style="font-size: 12px; opacity:0.7; line-height:0.1 rem; word-spacing:1px;">
							<div class="alert alert-warning" role="alert">
									1. To upload your images/pictures to be typed, click on choose files and select the files.
								  </div>
								  <div class="alert alert-warning" role="alert">
									2. Provide a name to be used as workspace for the selected files. Click on upload.
								  </div>
								
									  <div class="alert alert-warning" role="alert">
									3.  You will be automatically redirected to the payment section to complete your order.
									  </div>
									
						</div> 
					
					
				   </div>

			   </div>
		   </div>
	   </div> 
	   {% endblock %}

	   {% block me %}
	 
	   <div>

	   </div>
	  

			

			
	   {%endblock%}

{% block scrippy %}

<script type="text/javascript">
    // form upload
    
    
const fileInput = document.getElementById("oni");
const collection = document.getElementById("d2");
  const formdiv = document.getElementById("myformid")

  
 
function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
   
const uploadFile = (file,collection) => {
  console.log("Uploading file...");
  alert("here2")
  const API_ENDPOINT = window.location.pathname;
  const request = new XMLHttpRequest();
   const responseType = "json"
   request.responseType = responseType
  
  //const csrftoken = getCookie('csrftoken');
  //request.setRequestHeader("X-CSRFToken", csrftoken);
  const formData = new  FormData();
   alert("here3" )

  request.open("POST", API_ENDPOINT, true);
  request.onreadystatechange = () => {
    if (request.readyState === 4 && request.status === 200) {
      console.log(request.responseText);
      alert(request.responseText)
    }
  };
  
   request.onerror = function() {
        alert("An error occurred. Please try again later.")
    }
//formData.append({ 'k':'v' ,addcsrfmiddlewaretoken:'{{ csrf_token }}'}),
  formData.append("images", file);
  formData.append("collection", collection);
  formData.append("upload_done", "False")
  request.send(formData);
  alert("sent")
};

alert("here")
formdiv.addEventListener("submit", event => {
	event.preventDefault()
  const files = fileInput.files;
  
  
  for (let i = 0; i < files.length; i++) {
  
  uploadFile(files[0], collection.value);
  }
  alert(finished)
})
    
 
    // end
   </script>
{%endblock%}